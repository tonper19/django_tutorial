Database setup
Now, open up mysite/settings.py. It’s a normal Python module with module-level 
variables representing Django settings.

By default, the configuration uses SQLite. If you’re new to databases, or 
you’re just interested in trying Django, this is the easiest choice. SQLite is 
included in Python, so you won’t need to install anything else to support your 
database. When starting your first real project, however, you may want to use a 
more scalable database like PostgreSQL, to avoid database-switching headaches 
down the road.

If you wish to use another database, install the appropriate database bindings 
and change the following keys in the DATABASES 'default' item to match your 
database connection settings:

ENGINE – Either 'django.db.backends.sqlite3', 'django.db.backends.postgresql', 
'django.db.backends.mysql', or 'django.db.backends.oracle'. Other backends are 
also available.
NAME – The name of your database. If you’re using SQLite, the database will be 
a file on your computer; in that case, NAME should be the full absolute path, 
including filename, of that file. The default value, 
os.path.join(BASE_DIR, 'db.sqlite3'), will store the file in your project 
directory.
If you are not using SQLite as your database, additional settings such as 
USER, PASSWORD, and HOST must be added. 

run the following command:

$ python manage.py migrate

The migrate command looks at the INSTALLED_APPS setting and creates any 
necessary database tables according to the database settings in your 
mysite/settings.py file and the database migrations shipped with the app. 
You’ll see a message for each migration it applies. 
