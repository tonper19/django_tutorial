Removing hardcoded URLs in templates
Remember, when we wrote the link to a question in the polls/index.html 
template, the link was partially hardcoded like this:

<li>
    <a href="/polls/{{ question.id }}/">{{ question.question_text }}</a>
</li>

The problem with this hardcoded, tightly-coupled approach is that it becomes 
challenging to change URLs on projects with a lot of templates. However, since 
you defined the name argument in the path() functions in the polls.urls module, 
you can remove a reliance on specific URL paths defined in your url 
configurations by using the {% url %} template tag:

<li>
    <a href="{% url 'detail' question.id %}">{{ question.question_text }}</a>
</li>

The way this works is by looking up the URL definition as specified in the 
polls.urls module. You can see exactly where the URL name of ‘detail’ is 
defined below:

...
# the 'name' value as called by the {% url %} template tag
path('<int:question_id>/', views.detail, name='detail'),
...

If you want to change the URL of the polls detail view to something else, 
perhaps to something like polls/specifics/12/ instead of doing it in the 
template (or templates) you would change it in polls/urls.py:

...
# added the word 'specifics'
path('specifics/<int:question_id>/', views.detail, name='detail'),
...
